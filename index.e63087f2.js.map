{"mappings":"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","sources":["src/js/functions.js"],"sourcesContent":["/*** ADD EVENT ***/\r\n\r\nconst addEventBtn = document.querySelector('.add-new-event');\r\naddEventBtn.addEventListener('click', () => {\r\n    const newEventModal = document.querySelector('.modal');\r\n    newEventModal.style.display = 'flex';\r\n});\r\nconst closeModalBtn = document.querySelector('.leave-modal');\r\ncloseModalBtn.addEventListener('click', () => {\r\n    const newEventModal = document.querySelector('.modal');\r\n    newEventModal.style.display = 'none';\r\n    removeAdditionalDates();\r\n});\r\nconst addDateBtn = document.querySelector('.add-new-date-button');\r\naddDateBtn.addEventListener('click', addAdditionalDate);\r\nconst submitFormBtn = document.querySelector('.submit-form');\r\nsubmitFormBtn.addEventListener('click', addEvent);\r\nfunction addAdditionalDate() {\r\n    const parentDiv = document.querySelector('.event-dates');\r\n\r\n    const addDiv = document.createElement('div');\r\n    addDiv.classList.add('additional-date');\r\n\r\n    const newDateInput = document.createElement('input');\r\n    newDateInput.setAttribute('type', 'date');\r\n\r\n    const deleteSpan = document.createElement('span');\r\n    deleteSpan.classList.add('delete-date');\r\n    deleteSpan.addEventListener('click', () => {\r\n        dateDiv = deleteSpan.parentNode;\r\n        document.querySelector('.event-dates').removeChild(dateDiv);\r\n    });\r\n    deleteSpan.innerText = 'Ã—';\r\n\r\n    addDiv.appendChild(newDateInput);\r\n    addDiv.appendChild(deleteSpan);\r\n    parentDiv.appendChild(addDiv);\r\n}\r\nfunction removeAdditionalDates() {\r\n    const allAddDates = document.querySelectorAll('.additional-date');\r\n    for (const date of allAddDates) {\r\n        document.querySelector('.event-dates').removeChild(date);\r\n    }\r\n}\r\nfunction addEvent() {\r\n    const form = document.querySelector('.event-form');\r\n\r\n    const allDates = form.querySelectorAll('input[type=\"date\"]');\r\n    let dates = [];\r\n    for (const date of allDates) {\r\n        dates.push(date.value);\r\n    }\r\n\r\n    const formData = {\r\n        name: form.name.value,\r\n        dates: dates,\r\n        author: form.author.value,\r\n        description: form.description.value\r\n    };\r\n\r\n    fetch('http://localhost:3000/api/events/', {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(formData)\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n        if (result[0].type === 'string.empty') {\r\n            alert('All input fields must be completed to add an event');\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.error('Error:', error);\r\n    });\r\n\r\n    const newEventModal = document.querySelector('.modal');\r\n    newEventModal.style.display = 'none';\r\n\r\n    removeAdditionalDates() \r\n}\r\n\r\n/*** ADD ATTENDANCE ***/\r\n\r\nfunction attendanceAdd(e) {\r\n    e.preventDefault();\r\n\r\n    let dates = [];\r\n\r\n    const form = e.target.parentNode;\r\n    const radioBtns = form.querySelectorAll('.radio-buttons');\r\n    for (const radio of radioBtns) {\r\n        const results = radio.getElementsByTagName('input');\r\n        const date = results[0].name;\r\n        let value;\r\n        if (results[0].checked) {\r\n            value = true;\r\n        } else if (results[1].checked) {\r\n            value = false;\r\n        }\r\n\r\n        const availableObj = {\r\n            date: date,\r\n            available: value\r\n        }\r\n        dates.push(availableObj);\r\n    }\r\n\r\n    const formData = {\r\n        name: form.name.value,\r\n        dates: dates\r\n    };\r\n\r\n    const id = e.target.id;\r\n    fetch('http://localhost:3000/api/events/' + id + '/attend', {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(formData)\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => {\r\n        alert(result[0].message);\r\n    })\r\n    .catch(error => {\r\n        console.error('Error:', error);\r\n    });\r\n}\r\n\r\n/*** EDIT EVENT ***/\r\n\r\nfunction editEvent(e) {\r\n    e.target.innerText = 'Finish edit';\r\n\r\n    const id = e.target.id;\r\n    let article;\r\n\r\n    const allArticles = document.querySelectorAll('article');\r\n    for (const anArticle of allArticles) {\r\n        if (anArticle.id === id) {\r\n            article = anArticle;\r\n        }\r\n    }\r\n\r\n    const getNewTitle = document.createElement('input');\r\n    getNewTitle.setAttribute('type', 'text');\r\n    getNewTitle.setAttribute('name', 'modifyEvent');\r\n    getNewTitle.setAttribute('placeholder', 'Name of event');\r\n\r\n    const getNewDes = document.createElement('input');\r\n    getNewDes.setAttribute('type', 'text');\r\n    getNewDes.setAttribute('name', 'modifyDescription');\r\n    getNewDes.setAttribute('placeholder', 'Description');\r\n\r\n    const getNewAuthor = document.createElement('input');\r\n    getNewAuthor.setAttribute('type', 'text');\r\n    getNewAuthor.setAttribute('name', 'modifyAuthor');\r\n    getNewAuthor.setAttribute('placeholder', 'Your name');\r\n\r\n    article.querySelector('.title').replaceWith(getNewTitle);\r\n    article.querySelector('.description').replaceWith(getNewDes);\r\n    article.querySelector('.author').replaceWith(getNewAuthor);\r\n\r\n    e.target.removeEventListener('click', editEvent);\r\n    e.target.addEventListener('click', () => {\r\n        finishEdit(e, article, id)\r\n    });\r\n}\r\n\r\nfunction finishEdit(e, article, id) {\r\n    const newEvent = article.querySelector('input[name=\"modifyEvent\"]').value;\r\n    const newDescription = article.querySelector('input[name=\"modifyDescription\"]').value;\r\n    const newAuthor = article.querySelector('input[name=\"modifyAuthor\"]').value;\r\n\r\n    const editedData = {\r\n        name: newEvent,\r\n        author: newAuthor,\r\n        description: newDescription\r\n    };\r\n\r\n    fetch('http://localhost:3000/api/events/' + id, {\r\n      method: 'PATCH',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(editedData)\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => {\r\n        if (result[0].type === 'string.empty') {\r\n            alert('All input fields must be completed to finish editing the event');\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.error('Error:', error);\r\n    });\r\n\r\n    e.target.removeEventListener('click', () => {\r\n        finishEdit(e, article, id)\r\n    });\r\n}\r\n\r\n/*** DELETE EVENT ***/\r\n\r\nfunction deleteEvent(e) {\r\n    const id = e.target.id;\r\n\r\n    fetch('http://localhost:3000/api/events/' + id, {\r\n      method: 'DELETE'\r\n    });\r\n}"],"names":["addEventBtn","document","querySelector","addEventListener","style","display","closeModalBtn","removeAdditionalDates","addDateBtn","addAdditionalDate","submitFormBtn","parentDiv","addDiv","createElement","classList","add","newDateInput","setAttribute","deleteSpan","dateDiv","parentNode","removeChild","innerText","appendChild","allAddDates","querySelectorAll","date","addEvent","form","allDates","dates","push","value","formData","name","author","description","fetch","method","headers","body","JSON","stringify","then","response","json","result","type","alert","catch","error","console","attendanceAdd","e","preventDefault","target","radioBtns","radio","results","getElementsByTagName","checked","availableObj","available","id","message","editEvent","article","allArticles","anArticle","getNewTitle","getNewDes","getNewAuthor","replaceWith","removeEventListener","finishEdit","newEvent","newDescription","editedData","deleteEvent"],"version":3,"file":"index.e63087f2.js.map"}